/**
 * layout.css - Core layout structure for fixed sections and scrolling
 *
 * This file defines the mathematical and structural foundation for the three-layer design:
 * 1. Fixed header (navigation)
 * 2. Fixed hero and footer sections (static background)
 * 3. Scrollable middle content
 * 
 * The layout uses CSS positioning with z-index management to create depth
 * and proper stacking of elements.
 */

/* ===== VARIABLES ===== */
:root {
  /* Fixed section heights (dynamically calculated by JS) */
  --hero-height: 100vh;
  --footer-height: 400px;
  --header-height: 5rem;
  
  /* Z-index layers - Using powers of 10 for clear separation between layers */
  --z-base: 1;       /* Background elements */
  --z-above: 10;     /* Elements above background */
  --z-nav: 100;      /* Navigation elements */
  --z-modal: 1000;   /* Modal dialogs and overlays */
  --z-highest: 9999; /* Highest priority elements */
  
  /* Container width */
  --container-width: 1280px;
  
  /* Spacing scale - Based on a mathematical ratio of 1.5 */
  --spacing-xs: 0.25rem;   /* 4px */
  --spacing-sm: 0.5rem;    /* 8px */
  --spacing-md: 1rem;      /* 16px */
  --spacing-lg: 1.5rem;    /* 24px */
  --spacing-xl: 2.25rem;   /* 36px */
  --spacing-xxl: 3.375rem; /* 54px */
  
  /* Transitions - Based on common animation timing functions */
  --transition-fast: 150ms ease;
  --transition-medium: 300ms ease;
  --transition-slow: 500ms ease;
}

/* ===== PAGE CONTAINER ===== */
.page-container {
  position: relative;
  width: 100%;
  min-height: 100vh;
  overflow-x: hidden;
}

/* ===== FIXED SECTIONS ===== */
/* Hero section - Fixed at the top of the viewport */
.hero-static {
  position: fixed;
  top: 0;
  padding-top: 0;
  left: 0;
  width: 100%;
  height: var(--hero-height);
  z-index: var(--z-base);
  pointer-events: none; /* Allow clicks to pass through to content beneath */
}

/* Footer section - Fixed at the bottom of the viewport */
.footer-static {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  height: var(--footer-height);
  z-index: var(--z-base);
  pointer-events: none; /* Allow clicks to pass through to content beneath */
}

/* Make interactive elements in fixed sections clickable */
.interactive {
  position: relative;
  z-index: var(--z-above);
  pointer-events: auto; /* Override parent's pointer-events: none */
}

/* ===== SCROLLABLE CONTENT ===== */
.scrollable-content {
  position: relative;
  z-index: var(--z-above);
  min-height: 100vh;
  padding-top: 0; /* Remove any competing padding */
  margin-top: 0; /* Remove any competing margin */
}



/* Spacers to create room for fixed sections */
.spacer-top {
  height: var(--hero-height);
  position: relative;
}

.spacer-bottom {
  height: var(--footer-height);
  position: relative;
}

/* Main content area */
.main-content {
  position: relative;
  z-index: var(--z-above);
  background-color: var(--color-content-bg);
  margin-top: 0; /* Remove any competing margin */
  /* Removed trapezoid clip-path for rectangular shape */
}

/* ===== CONTAINER ===== */
.container {
  width: 100%;
  max-width: var(--container-width);
  margin-left: auto;
  margin-right: auto;
  padding-left: var(--spacing-md);
  padding-right: var(--spacing-md);
}

/* ===== SECTION PADDING ===== */
.content-section {
  padding: var(--spacing-xxl) 0;
}

/* ===== RESPONSIVE ADJUSTMENTS ===== */
@media (max-width: 768px) {
  :root {
      --header-height: 4rem;
      --trapezoid-offset: 2rem; /* Smaller offset on mobile */
  }
  
  .container {
      padding-left: var(--spacing-sm);
      padding-right: var(--spacing-sm);
  }
  
  .content-section {
      padding: var(--spacing-xl) 0;
  }
}