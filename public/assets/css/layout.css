/**
 * layout.css - Core layout structure for fixed sections and scrolling
 *
 * This file defines the mathematical and structural foundation for the three-layer design:
 * 1. Fixed header (navigation)
 * 2. Fixed hero and footer sections (static background)
 * 3. Scrollable middle content
 * 
 * The layout uses CSS positioning with z-index management to create depth
 * and proper stacking of elements.
 */

/* ===== VARIABLES ===== */
:root {
    /* Fixed section heights (dynamically calculated by JS) */
    --hero-height: 100vh;
    --footer-height: 400px;
    --header-height: 5rem;
    
    /* Z-index layers */
    --z-base: 1;        /* Background elements */
    --z-content: 10;    /* Scrollable content */
    --z-header: 100;    /* Navigation header */
    --z-overlay: 1000;  /* Modals, popups */
    
    /* Container width */
    --container-width: 1280px;
    
    /* Angles for trapezoid shapes */
    --trapezoid-angle: 5deg;
  }
  
  /* ===== PAGE CONTAINER ===== */
  .page-container {
    position: relative;
    width: 100%;
    min-height: 100vh;
    overflow-x: hidden;
  }
  
  /* ===== FIXED HEADER ===== */
  .site-header {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: var(--header-height);
    z-index: var(--z-header);
    background-color: var(--color-surface);
  }
  
  .nav-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: 100%;
    padding: 0 2rem;
  }
  
  .nav-group-left, .nav-group-right {
    display: flex;
    gap: 2rem;
  }
  
  /* ===== FIXED HERO SECTION ===== */
  .hero-static {
    position: fixed;
    top: var(--header-height);
    left: 0;
    width: 100%;
    height: var(--hero-height);
    z-index: var(--z-base);
  }
  
  .hero-section {
    position: relative;
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: var(--color-background);
  }
  
  /* ===== SCROLLABLE CONTENT ===== */
  .scrollable-content {
    position: relative;
    z-index: var(--z-content);
    min-height: 100vh; /* Ensure it can scroll */
  }
  
  /* Spacers to create room for fixed sections */
  .spacer-top {
    height: var(--hero-height);
  }
  
  .spacer-bottom {
    height: var(--footer-height);
  }
  
  .main-content {
    position: relative;
    z-index: var(--z-content);
    background-color: var(--color-content-bg);
    /* Create trapezoid shapes at top and bottom */
    clip-path: polygon(
      0 var(--trapezoid-offset), 
      100% 0, 
      100% calc(100% - var(--trapezoid-offset)), 
      0 100%
    );
    --trapezoid-offset: 4rem; /* Height of trapezoid cut */
  }
  
  /* ===== FIXED FOOTER SECTION ===== */
  .footer-static {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    height: var(--footer-height);
    z-index: var(--z-base);
  }
  
  .site-footer {
    position: relative;
    height: 100%;
    width: 100%;
    background-color: var(--color-background);
    padding-top: var(--trapezoid-offset);
  }
  
  /* ===== CONTAINER ===== */
  .container {
    width: 100%;
    max-width: var(--container-width);
    margin-left: auto;
    margin-right: auto;
    padding-left: 1rem;
    padding-right: 1rem;
  }
  
  /* ===== FOOTER GRID ===== */
  .footer-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    height: calc(100% - 3rem); /* Leave room for copyright */
  }
  
  .footer-about, .footer-contact {
    padding: 1rem;
  }
  
  .footer-copyright {
    text-align: center;
    padding: 1rem 0;
  }
  
  /* ===== TRAPEZOID SHAPES ===== */
  /* Base trapezoid shape for UI elements */
  .trapezoid {
    position: relative;
    /* Create trapezoid by skewing the element */
    transform: perspective(500px) rotateY(var(--trapezoid-angle));
    transform-origin: center center;
    transition: transform 0.3s ease;
  }
  
  .trapezoid:hover {
    transform: perspective(500px) rotateY(calc(var(--trapezoid-angle) * 1.5));
  }
  
  /* Contact cards with trapezoid shape */
  .contact-cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    gap: 1.5rem;
  }
  
  .contact-card {
    background-color: var(--color-surface);
    padding: 1.5rem;
    border-radius: 0.25rem;
    overflow: hidden;
  }
  
  .card-content {
    /* Counter the parent skew to keep content straight */
    transform: perspective(500px) rotateY(calc(var(--trapezoid-angle) * -1));
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.75rem;
  }
  
  /* ===== RESPONSIVE ADJUSTMENTS ===== */
  @media (max-width: 768px) {
    .footer-grid {
      grid-template-columns: 1fr;
    }
    
    .contact-cards {
      grid-template-columns: 1fr;
    }
    
    .main-content {
      --trapezoid-offset: 2rem; /* Smaller trapezoid on mobile */
    }
    
    :root {
      --footer-height: 600px; /* Taller footer on mobile to accommodate stacked content */
    }
  }