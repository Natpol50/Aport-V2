<!DOCTYPE html>
<html lang="{{ language|default('fr') }}">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="{% block meta_description %}{{ translations.translate('meta.description') }}{% endblock %}">
    
    <title>{% block title %}{{ translations.translate('site.title') }}{% endblock %}</title>
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">

    <!-- Favicon -->
    <link rel="icon" href="/assets/img/ashaLogo.ico" type="image/x-icon">
    <link rel="apple-touch-icon" href="/assets/img/ashaLogo.ico">

    <!-- CSS Files - The order matters for cascading priority -->
    <link rel="stylesheet" href="/assets/css/base.css">
    <link rel="stylesheet" href="/assets/css/layout.css">
    <link rel="stylesheet" href="/assets/css/components.css">
    <link rel="stylesheet" href="/assets/css/navigation.css">
    <link rel="stylesheet" href="/assets/css/effects.css">
    <link rel="stylesheet" href="/assets/css/utilities.css">
    <link rel="stylesheet" href="/assets/css/responsive.css">
    <link rel="stylesheet" href="/assets/css/project-cards.css">
    <link rel="stylesheet" href="/assets/css/static-fixes1.css">
    
    <!-- Custom stylesheets -->
    {% block stylesheets %}{% endblock %}
</head>
<body>
    <!-- Page container for overall structure -->
    <div class="page-container">
        <!-- Flash messages for notifications -->
        {% include 'components/flash-messages.html.twig' %}
        
        <!-- Fixed header/navbar -->
        {% include 'components/navigation.html.twig' %}
        
        <!-- Fixed hero section in background -->
        <div class="hero-static">
            {% block hero %}
                {% include 'components/hero.html.twig' %}
            {% endblock %}
        </div>
        
        <!-- Scrollable content layer -->
        <div class="scrollable-content">
            <!-- Top spacer to push content below hero -->
            <div class="spacer-top"></div>
            
            <!-- Main content area -->
            <main class="main-content">
                {% block content %}{% endblock %}
            </main>
            
            <!-- Bottom spacer to allow scrolling to footer -->
            <div class="spacer-bottom"></div>
        </div>
        
        <!-- Fixed footer in background -->
        <div class="footer-static">
            {% block footer %}
                {% include 'components/footer.html.twig' %}
            {% endblock %}
        </div>
    </div>
    

    <!-- Language switcher (positioned absolutely) -->
    {% include 'components/language-switcher.html.twig' %}  

    <!-- Optional: portrait mode warning for mobile -->
    {% include 'components/portrait-warning.html.twig' %}

    <!-- JavaScript - Load at the end for performance -->
    <script src="/assets/js/main.js"></script>
    <script src="/assets/js/responsive.js"></script>
    <script src="/assets/js/parallax.js"></script>
    <script src="/assets/js/ui.js"></script>
    <script src="/assets/js/project-cards.js"></script>
    <script src="/assets/js/mobile-menu.js"></script>
    
    <!-- Custom scripts -->
    {% block javascripts %}{% endblock %}

    <script>
    
    // Inline script to force 3D effect on project cards
    document.addEventListener("DOMContentLoaded", function() {
        console.log("Inline 3D effect initializer loaded");
        
        // Find all project cards
        const projectCards = document.querySelectorAll('.project-card');
        
        projectCards.forEach(card => {
            // Force 3D transform style
            card.style.transformStyle = "preserve-3d";
            card.style.perspective = "1000px";
            card.style.willChange = "transform";
            
            // Track mouse movement
            card.addEventListener('mousemove', function(e) {
                const rect = card.getBoundingClientRect();
                const mouseX = e.clientX - rect.left;
                const mouseY = e.clientY - rect.top;
                
                // Calculate rotation
                const rotateY = ((mouseX / rect.width) * 2 - 1) * 7; 
                const rotateX = ((mouseY / rect.height) * 2 - 1) * -5; 
                
                // Apply rotation
                this.style.transform = `perspective(1000px) rotateY(${rotateY}deg) rotateX(${rotateX}deg)`;
                
                // Adjust badge if present
                const badge = this.querySelector('.trapezoid-badge');
                if (badge) {
                    badge.style.transform = `skewX(-25deg) translateX(${(mouseX / rect.width - 0.5) * 5}px)`;
                }
            });
            
            // Reset on mouse leave
            card.addEventListener('mouseleave', function() {
                this.style.transform = 'perspective(1000px) rotateY(0deg) rotateX(0deg)';
                
                const badge = this.querySelector('.trapezoid-badge');
                if (badge) {
                    badge.style.transform = 'skewX(-20deg)';
                }
            });
        });
    });
    </script>
</body>
</html>